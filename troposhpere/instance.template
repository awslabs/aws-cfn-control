{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": {
    "Has_Public_Ip": {
      "Fn::Equals": [
        {
          "Ref": "UsePublicIp"
        },
        "true"
      ]
    },
    "not_existing_sg": {
      "Fn::Equals": [
        {
          "Ref": "ExistingSecurityGroup"
        },
        ""
      ]
    }
  },
  "Description": "test instance launch",
  "Mappings": {
    "AWSRegionAMI": {
      "ap-northeast-1": {
        "centos7": "ami-8e8847f1",
        "rhel7": "ami-6b0d5f0d"
      },
      "ap-northeast-2": {
        "centos7": "ami-bf9c36d1",
        "rhel7": "ami-3eee4150"
      },
      "ap-south-1": {
        "centos7": "ami-1780a878",
        "rhel7": "ami-5b673c34"
      },
      "ap-southeast-1": {
        "centos7": "ami-8e0205f2",
        "rhel7": "ami-76144b0a"
      },
      "ap-southeast-2": {
        "centos7": "ami-d8c21dba",
        "rhel7": "ami-67589505"
      },
      "ca-central-1": {
        "centos7": "ami-e802818c",
        "rhel7": "ami-49f0762d"
      },
      "eu-central-1": {
        "centos7": "ami-dd3c0f36",
        "rhel7": "ami-c86c3f23"
      },
      "eu-west-1": {
        "centos7": "ami-3548444c",
        "rhel7": "ami-7c491f05"
      },
      "eu-west-2": {
        "centos7": "ami-00846a67",
        "rhel7": "ami-7c1bfd1b"
      },
      "eu-west-3": {
        "centos7": "ami-262e9f5b",
        "rhel7": "ami-5026902d"
      },
      "sa-east-1": {
        "centos7": "ami-cb5803a7",
        "rhel7": "ami-b0b7e3dc"
      },
      "us-east-1": {
        "centos7": "ami-9887c6e7",
        "rhel7": "ami-6871a115"
      },
      "us-east-2": {
        "centos7": "ami-9c0638f9",
        "rhel7": "ami-03291866"
      },
      "us-west-1": {
        "centos7": "ami-4826c22b",
        "rhel7": "ami-18726478"
      },
      "us-west-2": {
        "centos7": "ami-3ecc8f46",
        "rhel7": "ami-28e07e50"
      }
    }
  },
  "Outputs": {
    "InstanceID": {
      "Description": "Instance ID",
      "Value": {
        "Ref": "MyInstance"
      }
    },
    "InstancePrivateIP": {
      "Value": {
        "Fn::GetAtt": [
          "MyInstance",
          "PrivateIp"
        ]
      }
    },
    "InstancePublicIP": {
      "Condition": "Has_Public_Ip",
      "Value": {
        "Fn::GetAtt": [
          "MyInstance",
          "PublicIp"
        ]
      }
    }
  },
  "Parameters": {
    "EC2KeyName": {
      "ConstraintDescription": "REQUIRED: Must be a valud EC2 key pair",
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance.",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "ExistingSecurityGroup": {
      "Description": "OPTIONAL: Choose an existing Security Group ID, e.g. sg-abcd1234",
      "Type": "AWS::EC2::SecurityGroup::Id"
    },
    "MyInstanceType": {
      "Default": "m5.2xlarge",
      "Description": "Instance type",
      "Type": "String"
    },
    "OperatingSystem": {
      "AllowedValues": [
        "alinux2",
        "centos7",
        "rhel7"
      ],
      "ConstraintDescription": "Must be: alinux2, centos7, rhel7",
      "Default": "centos7",
      "Description": "Operating System",
      "Type": "String"
    },
    "SshAccessCidr": {
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "Must be a valid CIDR x.x.x.x/x",
      "Default": "127.0.0.1/32",
      "Description": "CIDR Block for SSH access, default 127.0.0.1/32",
      "Type": "String"
    },
    "Subnet": {
      "Description": "Subnet IDs",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "UsePublicIp": {
      "AllowedValues": [
        "true",
        "false"
      ],
      "ConstraintDescription": "true/false",
      "Default": "true",
      "Description": "Should a public IP address be given to the instance",
      "Type": "String"
    },
    "VpcId": {
      "Description": "VPC Id for this instance",
      "Type": "AWS::EC2::VPC::Id"
    }
  },
  "Resources": {
    "InstanceWaitCondition": {
      "DependsOn": "MyInstance",
      "Properties": {
        "Handle": {
          "Ref": "InstanceWaitHandle"
        },
        "Timeout": "1500"
      },
      "Type": "AWS::CloudFormation::WaitCondition"
    },
    "InstanceWaitHandle": {
      "Type": "AWS::CloudFormation::WaitConditionHandle"
    },
    "MyInstance": {
      "Properties": {
        "IamInstanceProfile": {
          "Ref": "RootInstanceProfile"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionAMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Ref": "OperatingSystem"
            }
          ]
        },
        "InstanceType": {
          "Ref": "MyInstanceType"
        },
        "KeyName": {
          "Ref": "EC2KeyName"
        },
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": {
              "Ref": "UsePublicIp"
            },
            "DeleteOnTermination": true,
            "DeviceIndex": "0",
            "GroupSet": {
              "Fn::If": [
                "not_existing_sg",
                [
                  {
                    "Ref": "SshSecurityGroup"
                  }
                ],
                [
                  {
                    "Ref": "SshSecurityGroup"
                  },
                  {
                    "Ref": "ExistingSecurityGroup"
                  }
                ]
              ]
            },
            "SubnetId": {
              "Ref": "Subnet"
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/usr/bin/env bash\n",
                "\n",
                "set -x\n",
                "\n",
                "my_wait_handle=\"",
                {
                  "Ref": "InstanceWaitHandle"
                },
                "\"\n",
                "curl -X PUT -H 'Content-Type:' --data-binary '{ \"Status\" : \"SUCCESS\",  \"Reason\" : \"Instance launched\",  \"UniqueId\" : \"launch001\",  \"Data\" : \"Instance launched.\"}'  \"${my_wait_handle}\"",
                "\n",
                "\n"
              ]
            ]
          }
        }
      },
      "Type": "AWS::EC2::Instance"
    },
    "RootInstanceProfile": {
      "Properties": {
        "Roles": [
          {
            "Ref": "RootRole"
          }
        ]
      },
      "Type": "AWS::IAM::InstanceProfile"
    },
    "RootRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              }
            }
          ]
        }
      },
      "Type": "AWS::IAM::Role"
    },
    "SshSecurityGroup": {
      "Properties": {
        "GroupDescription": "SSH Secuirty group",
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Ref": "SshAccessCidr"
            },
            "FromPort": "22",
            "IpProtocol": "tcp",
            "ToPort": "22"
          }
        ],
        "VpcId": {
          "Ref": "VpcId"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    }
  }
}
